<?php

declare(strict_types=1);

namespace NeiroNetwork\TranslationPlugin\pocketmine;

use NeiroNetwork\TranslationPlugin\LanguageFactory;
use pocketmine\entity\Location;
use pocketmine\lang\Translatable;
use pocketmine\nbt\tag\CompoundTag;
use pocketmine\network\mcpe\NetworkSession;
use pocketmine\player\Player as PmPlayer;
use pocketmine\player\PlayerInfo;
use pocketmine\Server;

class Player extends PmPlayer{

	private Language $language;

	public function __construct(Server $server, NetworkSession $session, PlayerInfo $playerInfo, bool $authenticated, Location $spawnLocation, ?CompoundTag $namedtag){
		parent::__construct($server, $session, $playerInfo, $authenticated, $spawnLocation, $namedtag);
		$this->language = LanguageFactory::getInstance()->get($this->getLocale());
	}

	public function sendTip(Translatable|string $message) : void{
		if($message instanceof Translatable){
			$message = $this->translate($message->getText(), $message->getParameters());
		}
		parent::sendTip($message);
	}

	/**
	 * @param string[]|Translatable[] $parameters
	 */
	private function translate(string $message, array $parameters) : string{
		$parameters = array_map(fn(string|Translatable $p) => $p instanceof Translatable ? $this->getLanguage()->translate($p) : $p, $parameters);
		return $this->getLanguage()->translateString($message, $parameters);
	}

	public function getLanguage() : Language{
		return $this->language;
	}

	public function sendPopup(Translatable|string $message) : void{
		if($message instanceof Translatable){
			$message = $this->translate($message->getText(), $message->getParameters());
		}
		parent::sendPopup($message);
	}

	public function sendActionBarMessage(Translatable|string $message) : void{
		if($message instanceof Translatable){
			$message = $this->translate($message->getText(), $message->getParameters());
		}
		parent::sendActionBarMessage($message);
	}

	public function sendTitle(Translatable|string $title, Translatable|string $subtitle = "", int $fadeIn = -1, int $stay = -1, int $fadeOut = -1) : void{
		if($title instanceof Translatable){
			$title = $this->translate($title->getText(), $title->getParameters());
		}
		parent::sendTitle($title, $subtitle, $fadeIn, $stay, $fadeOut);
	}

	public function sendSubTitle(Translatable|string $subtitle) : void{
		if($subtitle instanceof Translatable){
			$subtitle = $this->translate($subtitle->getText(), $subtitle->getParameters());
		}
		parent::sendSubTitle($subtitle);
	}

	public function sendJukeboxPopup(string $key, array $args) : void{
		parent::sendJukeboxPopup($key, $args); // TODO: Change the autogenerated stub
	}
}